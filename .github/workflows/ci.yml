name: ci

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Enable tmate debug"
        type: boolean
        default: "false"

jobs:
  check-semantic-version:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          # Set fetch-depth to 0 to fetch all tags (necessary for git-mkver to determine the correct semantic version).
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install git-mkver
        run: |
          curl -L https://github.com/idc101/git-mkver/releases/download/v1.2.1/git-mkver-linux-amd64-1.2.1.tar.gz \
          | tar xvz \
          && sudo mv git-mkver /usr/local/bin

      - name: Install semantic version checker
        run: pip install git+https://github.com/octue/conventional-commits

      - name: Check version
        run: check-semantic-version pyproject.toml

  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.6.0
        with:
          # NOTE: If setting create_credentials_file=true, .dockerignore file must include `gha-creds-*.json` to avoid baking these credentials into build
          create_credentials_file: true
          workload_identity_provider: "projects/885434704038/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
          service_account: "aerosense-dashboard-deployment@aerosense-twined.iam.gserviceaccount.com"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup gcloud
        uses: "google-github-actions/setup-gcloud@v0"

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker europe-west6-docker.pkg.dev

      - name: Build
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: europe-west6-docker.pkg.dev/aerosense-twined/aerosense-dashboard:latest

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: aerosense-dashboard
          image: ${{ steps.build.outputs.imageid }}
          region: europe-west6
